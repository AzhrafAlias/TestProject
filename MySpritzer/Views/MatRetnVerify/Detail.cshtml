@model MySpritzer.Models.MatRetnVerifyModel

<!--//LOADING ANIMATION-->
<div id="loader" style="display:none"></div>
<div id="overlay" style="display:none"></div>
<!--LOADING ANIMATION//-->

<div class="container-fluid">
	<div>
		<div class="panel panel-primary">
			<div class="panel-heading">
				Material Return Verification
			</div>
			<div class="panel-body" style="max-height:550px;overflow-y: scroll;">
				@using (Html.BeginForm("Pick", "PickRawMtrl", FormMethod.Post, new { id = "DetailForm" }))
				{
					@Html.AntiForgeryToken()
					<hr />
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Company)
					@Html.HiddenFor(model => model.ActPartNum)
					@Html.HiddenFor(model => model.SupplierPart)
					@Html.HiddenFor(model => model.BalQty)
					@Html.HiddenFor(model => model.CreatedBy)
					@Html.HiddenFor(model => model.KeyId)
					@Html.HiddenFor(model => model.TranStatus)
					@Html.HiddenFor(model => model.Reason)

					<fieldset>

						<div class="col-xs-6">
							<div class="form-group">
								@Html.LabelFor(model => model.FromWH, htmlAttributes: new { @class = "control-label" })
								@Html.EditorFor(model => model.FromWH, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.FromWH, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xs-6">
							<div class="form-group">
								@Html.LabelFor(model => model.FromBin, htmlAttributes: new { @class = "control-label" })
								@Html.EditorFor(model => model.FromBin, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.FromBin, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xs-12">
							<div class="form-group">
								@Html.LabelFor(model => model.PartNum, htmlAttributes: new { @class = "control-label" })
								@Html.EditorFor(model => model.PartNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.PartNum, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xs-12">
							<div class="form-group">
								@Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label" })
								@Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xs-12">
							<div class="form-group">
								@Html.LabelFor(model => model.Lot, htmlAttributes: new { @class = "control-label" })
								@Html.EditorFor(model => model.Lot, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.Lot, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xs-6">
							<div class="form-group">
								@Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label" })
								@Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @type = "number", @style = "text-align:right", @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xs-6">
							<div class="form-group">
								@Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label" })
								@Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xs-12">
							<div class="form-group">
								@Html.Label("Condition", htmlAttributes: new { @class = "control-label" })
								<label>
									@Html.RadioButtonFor(m => m.RetReason, "Normal", new { disabled = "disabled" })
									Normal
								</label>
								<label>
									@Html.RadioButtonFor(m => m.RetReason, "Quality", new { disabled = "disabled" })
									Quality
								</label>
							</div>
						</div>
					</fieldset>

				}
			</div>

			<!-- WEB API RESPONSE MODAL -->
			<div class="modal fade" id="responseModal">
				<div class="modal-dialog">
					<div class="modal-content">

						<div class="modal-header">
							<h4 class="modal-title"></h4>
							<button type="button" class="close" data-dismiss="modal">&times;</button>
						</div>

						<div class="modal-body">
							<h4></h4>
						</div>

						<div class="modal-footer">
							<button type="button" class="btn btn-danger" id="btnModalClose">Okay</button>
						</div>

					</div>
				</div>
			</div>
			<!-- WEB API RESPONSE MODAL//-->

			<div class="panel-footer">
				<div class="btn-toolbar">
					<button type="button" class="btn btn-danger" id="btnClose">Close</button>
					<button type="button" class="btn btn-primary pull-right" id="btnConfirm" form="DetailForm" btn-lg btn-block>Confirm</button>
					<button type="button" class="btn btn-primary pull-right" id="btnReject" form="DetailForm" btn-lg btn-block>Reject</button>
					@*<a class="btn btn-primary pull-right" href="/MatRetnVerify/Index?Company=@Model.Company" role="button">Close</a>*@

				</div>
			</div>

		</div>
	</div>
</div>
<script type="text/javascript">
	$(document).ready(function () {

		$("#DisabledThisRadioBtn1").disabled = true;
		$("#DisabledThisRadioBtn2").disabled = true;

		//document.getElementById("DisabledThisRadioBtn1").disabled = true;
		//document.getElementById("DisabledThisRadioBtn2").disabled = true;

        $('#btnConfirm').click(function () {

			var obj = $("#KeyId").val();
			ShowLoader();
           $.ajax(
               {
                   url: '@(Url.Action("Confirm", "MatRetnVerify"))',
                   data: { Id: obj },
                //data : obj,
				//dataType: "json",
				type: "GET",
				contentType: 'application/json; charset=utf-8',
				success: function (data)
				{
					HideLoader();

					if (data)
					{
                        if (data.Message) {

                            var modal = $('#responseModal').modal(
                                {
                                    backdrop: 'static',
                                    keyboard: false
                                }
                            );
                            var msg = data.Message;
                            modal.find('.modal-header').text("Response Status");
                            modal.find('.modal-body').text(msg);
                        }

                    }
					},
				failure: function (response)
				{
					HideLoader();
					var modal = $('#responseModal').modal(
						{
						backdrop: 'static',
						keyboard: false
						}
					);
					var msg = response.responseText;
					modal.find('.modal-header').text("Response Status");
					modal.find('.modal-body').text(msg);
				},
				error: function (response)
				{
					HideLoader();
					var modal = $('#responseModal').modal(
						{
						backdrop: 'static',
						keyboard: false
						}
					);
					var msg = response.responseText;
					modal.find('.modal-header').text("Response Status");
					modal.find('.modal-body').text(msg);
				}
			});
        });
        $('#btnModalClose').click(function () {

            $('#responseModal').modal('hide');
            backtohome();

        });

		function backtohome() {
			var url = '@Url.Action("Index", "MatRetnVerify")' + "?Company=" + $("#Company").val();
			window.location.href = url;
            //window.location.href = '/MatRetnVerify/Index?Company=' + $("#Company").val();             // The function returns the product of p1 and p2
        }

        $('#btnReject').click(function () {

			var obj = $("#KeyId").val();
			ShowLoader();
           $.ajax(
               {

                   url: '@(Url.Action("Reject", "MatRetnVerify"))',
                   data: { Id: obj },
                //data : obj,
				//dataType: "json",
				type: "GET",
				contentType: 'application/json; charset=utf-8',
				success: function (data)
				{
					HideLoader();

					if (data)
					{
                        if (data.Message) {

                            var modal = $('#responseModal').modal(
                                {
                                    backdrop: 'static',
                                    keyboard: false
                                }
                            );
                            var msg = data.Message;
                            modal.find('.modal-header').text("Response Status");
                            modal.find('.modal-body').text(msg);
                        }

                    }
					},
				failure: function (response)
				{
					HideLoader();
					var modal = $('#responseModal').modal(
						{
						backdrop: 'static',
						keyboard: false
						}
					);
					var msg = response.responseText;
					modal.find('.modal-header').text("Response Status");
					modal.find('.modal-body').text(msg);
				},
				error: function (response)
				{
					HideLoader();
					var modal = $('#responseModal').modal(
						{
						backdrop: 'static',
						keyboard: false
						}
					);
					var msg = response.responseText;
					modal.find('.modal-header').text("Response Status");
					modal.find('.modal-body').text(msg);
				}
			});
        })

		$('#btnClose').click(function () {
            backtohome();
        });
    });

</script>

